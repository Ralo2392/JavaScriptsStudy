2022_0820 ~ 0821 공부

섹션 0번 10강~

View가 div, Text가 span이라고 생각하기 (일대일 대응은 아니다)
css는 dp 단위(density independent pixels, 다양한 화면의 크기에 영향 x)
css 속성 리스트(https://github.com/vhpoet/react-native-styling-cheat-sheet) 참고하여 쓸것
flex 기반으로 코딩하는데 flexDirection이 Column이 default

React Navigation 사용

npm i @react-navigation/native
npm i @react-navigation/native-stack
npm i react-native-screens react-native-safe-area-context

그리고 README.md 에 적혀있는대로 코드 추가.

App.tsx 코드 교체.

앱을 만들때 미리 페이지에 버튼이라던지 구조드를 다 구상해놓고(선 기획)
거기에 맞춰 제작해야 한다.

리엑트 네비게이션 옵션 목록 https://reactnavigation.org/docs/screen-options 참고

타입스크립트는 매개 변수, 리턴값, 변수등에 어떤 타입인지 정확히 표기한것!
(정확한 개념은 아니나 이해를 돕기위한 말)

jusifyContent : 'center' 가운데 줄 정렬  'flex-end' 맨 밑줄 정렬
alignItems : 'center' 가운데 정렬 'flex-end' 오른쪽 정렬

표기 없을시 맨 윗줄, 왼쪽 정렬.

=> index.d.ts(node_modules\@types\react-native 에 위치)에
각 스타일에서 가능한 옵션들을 볼 수 있다.
옵션 설명은 구글링 or 강의 참고. => 잘 이용할것

<TouchableHighlight> <Pressable> <TouchableNativeFeedback> <TouchableWithoutFeedback> <TouchableOpacity>
=> 버튼 기능
옵션도 줄수있다. 각 버튼마다 버튼을 눌렀을때의 차이점들이 존재하니 직접 하나씩 작동해보고 골라쓰자

보통은 Pressable을 쓴다고 한다.
=> 운영체제마다 다르게 애니메이션이 나타나기때문에 똑같이 보이도록해서 쓴다. 거기에 따로 스타일을 준다.

버튼의 크기는 style을 이용해서 줄수있고, 색깔을 입힐경우
따로 Text 태그 안에도 글자 색깔 설정을 따로 해주어야 한다.

보통 padding을 쓰는데, Top Bottom Left Right 로 각각 여백을 지정해줄 수 있다.
위 아래 통합하면 paddingVertical, 좌우 통합은 paddingHorizontal로 한번에 설정 가능.

기본적으로 flex를 주면 세로로 정렬을 하나,
가로로 하고싶은 경우 flexDirection: 'row'로 주면 가로부터 정렬한다.

가로로 정렬하는 경우 웹처럼 바뀐다.

리엑트 네이티브 네비게이터를 쓰는 이유??

---------------------------------------------------------------------------

섹션 1번 1강 : 앱 라우터 구성하기 ~

npm install @react-navigation/bottom-tabs 설치

Tab / Drawer / stack 등 여러 네비게이션을 이용하는데
사용자가 스스로 결정하여 만들면 된다. 모두 함께 넣을 수 도 있다.

깃허브 참고 => 챕터 1 app.tsx 참고.

소스 코드만 복사해서 참고하고 내용자체를 다 붙여넣기 하지마라.

기본적인 틀을 미리 짜놓아야 Tab 이든 Drawer든 것을 넣을지 구상할수 있다.

이후는 실습에 집중.
